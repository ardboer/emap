import { useBrandConfig } from "@/hooks/useBrandConfig";
import { useColorScheme } from "@/hooks/useColorScheme";
import React from "react";
import { StyleSheet, Text, View } from "react-native";

// Import auto-generated logo registry
// This file is automatically generated by scripts/prebuild.js
// No manual updates needed when adding new brands!
import {
  BRAND_HEADER_DARK_LOGOS,
  BRAND_HEADER_LOGOS,
  BRAND_LOGOS,
} from "@/brands/logoRegistry";

interface BrandLogoProps {
  width?: number;
  height?: number;
  style?: any;
  variant?: "default" | "header";
}

export function BrandLogo({
  width = 120,
  height = 40,
  style,
  variant = "default",
}: BrandLogoProps) {
  const { brandConfig, loading } = useBrandConfig();
  const colorScheme = useColorScheme();
  const isDark = colorScheme === "dark";

  if (loading || !brandConfig) {
    return <View style={[styles.container, { width, height }, style]} />;
  }

  // Determine which logo to use based on variant and color scheme
  let LogoComponent;
  if (variant === "header") {
    // Fallback chain for header variant:
    // 1. Try logo-header-dark.svg in dark mode
    // 2. Try logo-header.svg
    // 3. Fallback to logo.svg
    if (isDark && BRAND_HEADER_DARK_LOGOS[brandConfig.shortcode]) {
      LogoComponent = BRAND_HEADER_DARK_LOGOS[brandConfig.shortcode];
    } else {
      LogoComponent =
        BRAND_HEADER_LOGOS[brandConfig.shortcode] ||
        BRAND_LOGOS[brandConfig.shortcode];
    }
  } else {
    LogoComponent = BRAND_LOGOS[brandConfig.shortcode];
  }

  // Fallback if brand logo not found in registry
  if (!LogoComponent) {
    console.warn(`Logo not found for brand: ${brandConfig.shortcode}`);
    return (
      <View style={[styles.container, { width, height }, style]}>
        <Text style={styles.fallbackText}>{brandConfig.displayName}</Text>
      </View>
    );
  }

  return (
    <View style={[styles.container, { width, height }, style]}>
      <LogoComponent width={width} height={height} style={styles.logo} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    justifyContent: "center",
    alignItems: "center",
    borderRadius: 8,
    paddingHorizontal: 12,
    paddingVertical: 6,
  },
  logo: {
    flex: 1,
  },
  fallbackText: {
    fontSize: 14,
    fontWeight: "600",
    color: "#666",
  },
});
